import * as fs from "fs";


enum Direction {
    Increasing,
    Decreasing
}

function isContinous(input: number[]) : Boolean {
    let dir: Direction;
    const maxJump = 3;
    let errors = 0;

    if (input[0] < input[1]) {
        dir = Direction.Increasing;
    } else if (input[0] > input[1]) {
        dir = Direction.Decreasing;
    } else if (input[0] < input[2]) {
        input.splice(1, 1);
        errors++;
        dir = Direction.Increasing;
    } else if (input[0] > input[2]) {
        input.splice(1, 1);
        errors++;
        dir = Direction.Decreasing;
    } else {
        return false;
    }

    if (input[0] < input[1] && input[1] > input[2]) {
        errors++;
        dir = Direction.Decreasing;
        input.splice(0, 1);
    }
    if (input[0] > input[1] && input[1] < input[2]) {
        errors++;
        dir = Direction.Increasing;
        input.splice(0, 1);
    }
    for (let i = 0; i < input.length; i++) {
        let jump = Math.abs(input[i] - input[i + 1]);
        if (jump > maxJump || jump == 0) {
            input.splice(i, 1);
            i--;
            errors++;
            if (errors > 1) return false;
        }

        if (dir == Direction.Decreasing && input[i] < input[i + 1]) {
            input.splice(i, 1);
            i--;
            errors++;
            if (errors > 1)
            return false;
        } 

        if (dir == Direction.Increasing && input[i] > input[i + 1]) {
            input.splice(i+1, 1);
            i--;
            errors++;
            if (errors > 1)
            return false;
        }

    }
    return true;
}
let data = fs.readFileSync("AdventOfCode2/input1", "utf8");

let input1 = [7, 6, 4, 2, 1];
let input2 = [1, 2, 7, 8, 9];
let input3 = [9, 7, 6, 2, 1];
let input4 = [1, 3, 2, 4, 5];
let input5 = [8, 6, 4, 4, 1];
let input6 = [1, 3, 6, 7, 9];
let input7 = [1, 2, 3, 4, 5, 5];
let input8 = [1, 4, 3, 2, 1];
let input9 = [29, 28, 27, 25, 26, 25, 22, 20];
let input10 = [7, 10, 8, 10, 11];
let input11 = [9, 8, 7, 6, 7];
let input12 = [1, 2, 3, 4, 3];
let input13 = [1, 6, 7, 8, 9];
console.log(isContinous(input1));
console.log(isContinous(input2));
console.log(isContinous(input3));
console.log(isContinous(input4));
console.log(isContinous(input5));
console.log(isContinous(input6));
console.log(isContinous(input7));
console.log(isContinous(input8));
console.log(isContinous(input9));
console.log(isContinous(input10));
console.log(isContinous(input11));
console.log(isContinous(input12));
console.log(isContinous(input13));

//let arr = data.split("\n");
//let two_d_arr = arr.map(row => row.split(' '));
//
//let number_arr: number[][] = two_d_arr.map(row => row.map(str => parseInt(str)));
//let sum = 0;
//
//for (let i = 0; i < number_arr.length; i++) {
//    if (isContinous(number_arr[i])) sum += 1;
//}
//
//console.log(sum);


















